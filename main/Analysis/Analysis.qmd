---
title: "Analysis"
format: html
editor: visual
output:
  html_document:
    df_print: paged
---

```{r, include =F}
library(groundhog)
pkgs <-  c("corrr","tidyverse","ggplot2","lme4","lmerTest", "ggeffects", "sjPlot", "insight", "data.table", "here", "arrow", "jtools", "psych")
groundhog.day <- '2022-07-25'
groundhog.library(pkgs, groundhog.day)
here::i_am("main/Analysis/reportingResults.Rmd")
```

```{r, include =F}
#study 1
longDf1 <- read_parquet(here("main","analysis","output","PFfullDf.parquet"))
distDf1 <- read_parquet(here("main","analysis","output","distanceDf.parquet"))
varDf1 <- read_parquet(here("main","analysis","output","varDf1.parquet"))
study1_ind <- read.csv(here("main","analysis","output","Study1_indDiff.csv"))
study1_ind<- study1_ind[,c(2, 4,5,6,7,8,9)]
longDf1 <- merge(longDf1, study1_ind, by = c("subID"), all.x = T)

longDf1$partyN <- as.factor(longDf1$partyN)
longDf1$Rep <- as.factor(longDf1$Rep)
contrasts(longDf1$Rep) <- contr.sum(3)
longDf1$RepN <- as.factor(longDf1$RepN)
longDf1$RepN <- relevel(longDf1$RepN,"In")
longDf1$Info <- as.factor(longDf1$Info)
contrasts(longDf1$Info) <- contr.sum(2)
longDf1$partyN <- as.factor(longDf1$partyN)
contrasts(longDf1$partyN) <- contr.sum(2)
demDf <- subset(longDf1, partyN == "Dem")
repDf <- subset(longDf1, partyN == "Rep")
longDf1$politStre <- as.factor(abs(4-longDf1$Polit))
InfoDf1 <- subset(longDf1, Info == "Info")
issueDf1 <- longDf1[!duplicated(longDf1$issues),]
distDf1$polStrength <- as.factor(abs(4-distDf1$Polit))

#study 2
longDf2 <- read_parquet(here("main","analysis","output","PFfullDf2.parquet"))
distDf2 <- read_parquet(here("main","analysis","output","distanceDf2.parquet"))
varDf2 <- read_parquet(here("main","analysis","output","varDf2.parquet"))
study2_ind <- read.csv(here("main","analysis","output","Study2_indDiff.csv"))
study2_ind<- study2_ind[,c(2:11, 13:15)]
longDf2 <- merge(longDf2, study2_ind, by = c("subID"), all.x = T)

longDf2$partyN <- as.factor(longDf2$partyN)
longDf2$Rep <- as.factor(longDf2$Rep)
longDf2$Rep <- factor(longDf2$Rep, c("Non","Rep","Dem"))
longDf2$Rep <- relevel(longDf2$Rep,"Non")
contrasts(longDf2$Rep) <- contr.sum(3)
longDf2$RepN <- as.factor(longDf2$RepN)
longDf2$RepN <- relevel(longDf2$RepN,"In")
longDf2$Info <- as.factor(longDf2$Info)
contrasts(longDf2$Info) <- contr.sum(2)
longDf2$partyN <- as.factor(longDf2$partyN)
contrasts(longDf2$partyN) <- contr.sum(2)
demDf <- subset(longDf2, partyN == "Dem")
repDf <- subset(longDf2, partyN == "Rep")
longDf2$politStre <- as.factor(abs(4-longDf2$Polit))
InfoDf2 <- subset(longDf2, Info == "Info")
issueDf2 <- longDf2[!duplicated(longDf2$issues),]
```


# Demographics

```{r}
#age
m_age_1 <- describe(longDf1$Age)
m_age_2 <- describe(longDf2$Age)
#gender
gender_1 <- prop.table(table(longDf1$Gender))
gender_2 <- prop.table(table(longDf2$Gender))
#race
longDf1$ethnicity[longDf1$Race == 1] <- "Black"
longDf1$ethnicity[longDf1$Race == 2] <- "Asian"
longDf1$ethnicity[longDf1$Race == 3] <- "White"
longDf1$ethnicity[longDf1$Race == 4] <- "Hispanic"
longDf1$ethnicity[longDf1$Race == 5] <- "Pacific Islander"
longDf2$ethnicity[longDf2$Race ==6] <- "Other"

longDf2$ethnicity[longDf2$Race == 1] <- "Black"
longDf2$ethnicity[longDf2$Race == 2] <- "Asian"
longDf2$ethnicity[longDf2$Race == 3] <- "White"
longDf2$ethnicity[longDf2$Race == 4] <- "Hispanic"
longDf2$ethnicity[longDf2$Race == 5] <- "Pacific Islander"
longDf2$ethnicity[longDf2$Race ==6] <- "Other"
race_1 <- prop.table(table(longDf1$ethnicity))
race_2 <- prop.table(table(longDf2$ethnicity))
#1 = Black, 2 = Asian, 3 = White, 4 = Hispanic, 5 = Pacific Islander, 6 = Other

#education
education_1 <- prop.table(table(longDf1$Education))
education_2 <- prop.table(table(longDf2$Education))
#political affiliation
polit_1 <- prop.table(table(longDf1$Polit))
polit_2 <- prop.table(table(longDf2$Polit))

```

# correlations between issues
```{r}
choice <- longDf1[grep("Pro-choice", longDf1$Final.Phrasing),]
guns <- longDf1[grep("purchase guns", longDf1$Final.Phrasing),]
temperatures <- longDf1[grep("LGBT", longDf1$Final.Phrasing),]

cor.test(choice$eval, guns$eval)
```


# Similarity of Issues Predicting Similarity of Evaluations

## main effect of similarity 

### Study 1

```{r}
m_sim_1 <- lmer( scale(dist) ~ scale(corr)+ ( scale(corr) | subID), data = distDf1, control=lmerControl(optimizer="bobyqa",
                                optCtrl=list(maxfun=2e5)))
summary(m_sim_1)
m_sim_1_CI <- confint(m_sim_1, method= "Wald")
m_sim_1_CI_boot <- confint(m_sim_1)
ggpredict(m_sim_1, c("corr")) %>% plot()
```

### Study 2

```{r}
m_sim_2 <- lmer( scale(dist) ~ scale(corr)+ ( scale(corr) | subID), data = distDf2, control=lmerControl(optimizer="bobyqa",
                                optCtrl=list(maxfun=2e5)))
summary(m_sim_2)
m_sim_2_CI <- confint(m_sim_2, method= "Wald")
ggpredict(m_sim_2, c("corr")) %>% plot()
```

## Info Manipulation

### Study 1

```{r}
m_sim_Info_1 <- lmer( scale(dist) ~ scale(corr) * Info + ( scale(corr) | subID), data = distDf1, control=lmerControl(optimizer="bobyqa",
                                optCtrl=list(maxfun=2e5)))
summary(m_sim_Info_1)
m_sim_rep_2_CI <- confint(m_sim_Info_1, method= "Wald")
ggpredict(m_sim_Info_1, c("corr","Info")) %>% plot()
```

### Study 2

```{r}
m_sim_Info_2 <- lmer( scale(dist) ~ scale(corr) * Info + ( scale(corr) | subID), data = distDf2, control=lmerControl(optimizer="bobyqa",
                                optCtrl=list(maxfun=2e5)))
summary(m_sim_Info_2)
m_sim_Info_2_CI <- confint(m_sim_Info_2, method= "Wald")
ggpredict(m_sim_Info_2, c("corr","Info")) %>% plot()
```

## Reputation Manipulation

### Study 1

```{r}
m_sim_rep_1 <- lmer( scale(dist) ~ scale(corr) * RepN + ( scale(corr) | subID), data = distDf1, control=lmerControl(optimizer="bobyqa",
                                optCtrl=list(maxfun=2e5)))
summary(m_sim_rep_1)
m_sim_rep_1_CI <- confint(m_sim_rep_1, method= "Wald")

ggpredict(m_sim_rep_1, c("corr","RepN")) %>% plot()
```

### Study 2

```{r}
m_sim_rep_2 <- lmer( scale(dist) ~ scale(corr) * RepN + ( scale(corr) | subID), data = distDf2, control=lmerControl(optimizer="bobyqa",
                                optCtrl=list(maxfun=2e5)))
summary(m_sim_rep_2)
m_sim_rep_2_CI <- confint(m_sim_rep_2, method= "Wald")

ggpredict(m_sim_rep_2, c("corr","RepN")) %>% plot()
```

## Affective Polarization

### Study 1

```{r}
m_sim_Aff_1<- lmer( scale(dist) ~ scale(corr) * scale(affPol) + ( scale(corr) | subID), data = distDf1, control=lmerControl(optimizer="bobyqa",
                                optCtrl=list(maxfun=2e5)))
summary(m_sim_Aff_1)
m_sim_Aff_1_CI <- confint(m_sim_Aff_1, method= "Wald")
ggpredict(m_sim_Aff_1, c("corr","affPol")) %>% plot()
```

### Study 2

```{r}
m_sim_Aff_2 <- lmer( scale(dist) ~ scale(corr) * scale(affPol) + ( scale(corr) | subID), data = distDf2, control=lmerControl(optimizer="bobyqa",
                                optCtrl=list(maxfun=2e5)))
summary(m_sim_Aff_2)
m_sim_Aff_2_CI <- confint(m_sim_Aff_2, method= "Wald")

ggpredict(m_sim_Aff_2, c("corr","affPol")) %>% plot()
```

## Interaction between Info and RepN

### Study 1

```{r}
m_sim_Info_Rep_1 <- lmer( scale(dist) ~ scale(corr) * Info * RepN + ( scale(corr) | subID), data = distDf1, control=lmerControl(optimizer="bobyqa",
                                optCtrl=list(maxfun=2e5)))
summary(m_sim_Info_Rep_1)
m_sim_Info_Rep_1_CI <- confint(m_sim_Info_Rep_1, method= "Wald")
```

### Study 2

```{r}
m_sim_Info_Rep_2 <- lmer( scale(dist) ~scale(corr) * Info * RepN  + ( scale(corr) | subID), data = distDf2, control=lmerControl(optimizer="bobyqa",
                                optCtrl=list(maxfun=2e5)))
summary(m_sim_Info_Rep_2)
m_sim_Info_Rep_1_CI <- confint(m_sim_Info_Rep_2, method= "Wald")
```


## Interaction between Info and AffPol

### Study 1

```{r}
m_sim_Info_Rep_1 <- lmer( scale(dist) ~ scale(corr) * Info * scale(affPol) + ( scale(corr) | subID), data = distDf1, control=lmerControl(optimizer="bobyqa",
                                optCtrl=list(maxfun=2e5)))
summary(m_sim_Info_Rep_1)
m_sim_Info_Rep_1_CI <- confint(m_sim_Info_Rep_1, method= "Wald")
```

# Ideological Consistency as Variance Around Ingroup and Outgroup

## For Info manipulation

### Study 1

```{r}
m_cons_in_Info_1 <- lm(scale(varAroundIn) ~ Info, varDf1)
summary(m_cons_in_Info_1)
m_cons_in_Info_1_CI <- confint(m_cons_in_Info_1, method= "Wald")

ggpredict(m_cons_in_Info_1, c("Info") ) %>% plot()

m_cons_out_Info_1 <- lm(scale(varAroundOut) ~ Info, varDf1)
summary(m_cons_out_Info_1)
m_cons_out_Info_1_CI  <- confint(m_cons_out_Info_1, method= "Wald")

ggpredict(m_cons_out_Info_1, c("Info") ) %>% plot()
```

### Study 2

```{r}
m_cons_in_Info_2 <- lm(scale(varAroundIn) ~ Info, varDf2)
summary(m_cons_in_Info_2)
m_cons_in_Info_2_CI  <- confint(m_cons_in_Info_2, method= "Wald")
ggpredict(m_cons_in_Info_2, c("Info") ) %>% plot()

m_cons_out_Info_2<- lm(scale(varAroundOut) ~ Info, varDf2)
summary(m_cons_out_Info_2)
m_cons_out_Info_2_CI  <- confint(m_cons_out_Info_2, method= "Wald")
```

## Affective Polarization

### Study 1

```{r}
m_cons_in_Aff_1 <- lm(scale(varAroundIn) ~ scale(affPol), varDf1)
summary(m_cons_in_Aff_1)
m_cons_in_Aff_1_CI  <- confint(m_cons_in_Aff_1, method= "Wald")


m_cons_out_Aff_1 <- lm(scale(varAroundOut) ~ scale(affPol), varDf1)
summary(m_cons_out_Aff_1)
m_cons_out_Aff_1_CI  <- confint(m_cons_out_Aff_1, method= "Wald")

```

### Study 2

```{r}
m_cons_in_Aff_2 <- lm(scale(varAroundIn) ~ scale(affPol), varDf2)
summary(m_cons_in_Aff_2)
m_cons_in_Aff_2_CI  <- confint(m_cons_in_Aff_2, method= "Wald")

m_cons_out_Aff_2 <- lm(scale(varAroundOut) ~ scale(affPol), varDf2)
summary(m_cons_out_Aff_2)
m_cons_out_Aff_2_CI  <- confint(m_cons_out_Aff_2, method= "Wald")
```

## RepN manipulation

### Study 1

```{r}
m_cons_in_Rep_1 <- lm(scale(varAroundIn) ~ RepN, varDf1)
summary(m_cons_in_Rep_1)
m_cons_in_Rep_1_CI  <- confint(m_cons_in_Rep_1, method= "Wald")

m_cons_out_Rep_1<- lm(scale(varAroundOut) ~ RepN, varDf1)
summary(m_cons_out_Rep_1)
m_cons_out_Rep_1_CI  <- confint(m_cons_out_Rep_1, method= "Wald")

```

### Study 2

```{r}
m_cons_in_Rep_2 <- lm(scale(varAroundIn) ~ RepN, varDf2)
summary(m_cons_in_Rep_2)
m_cons_in_Rep_2_CI  <- confint(m_cons_in_Rep_2, method= "Wald")


m_cons_out_Rep_2 <- lm(scale(varAroundOut) ~ RepN, varDf2)
summary(m_cons_out_Rep_2)
m_cons_out_Rep_2_CI  <- confint(m_cons_out_Rep_2, method= "Wald")

```

## Aff pol with Info manipulation

*driven by aff, not info*

### Study 1

```{r}
m_cons_in_Aff_Info_1 <- lm(scale(varAroundIn) ~  scale(affPol)*Info, varDf1)
summary(m_cons_in_Aff_Info_1)
m_cons_in_Aff_Info_1_CI  <- confint(m_cons_in_Aff_Info_1, method= "Wald")

m_cons_out_Aff_Info_1<- lm(scale(varAroundOut) ~ RepN, varDf1)
summary(m_cons_out_Aff_Info_1)
m_cons_out_Aff_Info_1_CI  <- confint(m_cons_out_Aff_Info_1, method= "Wald")
```

### Study 2

```{r}
m_cons_in_Aff_Info_2 <- lm(scale(varAroundIn) ~ RepN, varDf2)
summary(m_cons_in_Aff_Info_2)
m_cons_in_Aff_Info_2_CI  <- confint(m_cons_in_Aff_Info_2, method= "Wald")

m_cons_out_Aff_Info_2 <- lm(scale(varAroundOut) ~ RepN, varDf2)
summary(m_cons_out_Aff_Info_2)
m_cons_out_Aff_Info_2_CI  <- confint(m_cons_out_Aff_Info_2, method= "Wald")
```

# Ideological polarization models

## main effect of inter-group favorability

### Study 1

```{r}
m_pol_main_1 <- lmer( scale(eval) ~ scale(inMinOut) + ( scale(inMinOut) | subID) + (1 | issues), data = longDf1, control=lmerControl(optimizer="bobyqa",
                                optCtrl=list(maxfun=2e5)))
summary(m_pol_main_1)
m_pol_main_1_CI  <- confint(m_pol_main_1, method= "Wald")

ggpredict(m_pol_main_1, c("inMinOut")) %>% plot()
```

### Study 2

```{r}
m_pol_main_2 <- lmer( scale(eval) ~ scale(inMinOut) + ( scale(inMinOut) | subID) + (1 | issues), data = longDf2, control=lmerControl(optimizer="bobyqa",
                                optCtrl=list(maxfun=2e5)))
summary(m_pol_main_2)
m_pol_main_2_CI  <- confint(m_pol_main_2, method= "Wald")

ggpredict(m_pol_main_2, c("inMinOut")) %>% plot()
```

## effect of Info 

### Study 1

```{r}
m_pol_Info_1 <- lmer( scale(eval) ~ scale(inMinOut) * Info  + ( scale(inMinOut) | subID) + (1 | issues), data = longDf1, control=lmerControl(optimizer="bobyqa",
                                optCtrl=list(maxfun=2e5)))
summary(m_pol_Info_1)
m_pol_Info_1_CI  <- confint(m_pol_Info_1, method= "Wald")

ggpredict(m_pol_Info_1) %>% plot()
```

### Study 2

```{r}
m_pol_Info_2 <- lmer( scale(eval) ~ scale(inMinOut) * Info  + ( scale(inMinOut) | subID) + (1 | issues), data = longDf2, control=lmerControl(optimizer="bobyqa",
                                optCtrl=list(maxfun=2e5)))
summary(m_pol_Info_2)
m_pol_Info_2_CI  <- confint(m_pol_Info_2, method= "Wald")

ggpredict(m_pol_Info_2, c("inMinOut", "Info")) %>% plot()
```

## Effect of Affective polarization

### Study 1

```{r}
m_pol_Aff_1<- lmer( scale(eval) ~ scale(inMinOut) * scale(affPol) + ( scale(inMinOut) + scale(affPol) | subID) + (1 | issues), data = longDf1, control=lmerControl(optimizer="bobyqa",
                                optCtrl=list(maxfun=2e5)))
summary(m_pol_Aff_1)
m_pol_Aff_1_CI  <- confint(m_pol_Aff_1, method= "Wald")

ggpredict(m_pol_Aff_1, c("inMinOut", "affPol")) %>% plot()
```

### Study 2

```{r}
m_pol_Aff_2 <- lmer( scale(eval) ~ scale(inMinOut) * scale(affPol) +scale(inMinOut) + ( scale(inMinOut) + scale(affPol) | subID) + (1 | issues), data = longDf2, control=lmerControl(optimizer="bobyqa",
                                optCtrl=list(maxfun=2e5)))
summary(m_pol_Aff_2)
m_pol_Aff_2_CI  <- confint(m_pol_Aff_2, method= "Wald")
ggpredict(m_pol_Aff_2, c("inMinOut", "affPol")) %>% plot()
```

## Effect of Affective polarization & info in the same model

### Study 1

```{r}
m_pol_Aff_Info_1 <- lmer( scale(eval) ~ scale(inMinOut) * scale(affPol) +scale(inMinOut) * as.factor(Info) + ( scale(inMinOut) + scale(affPol) | subID) + (1 | issues), data = longDf1, control=lmerControl(optimizer="bobyqa",
                                optCtrl=list(maxfun=2e5)))
summary(m_pol_Aff_Info_1)
m_pol_Aff_Info_1_CI  <- confint(m_pol_Aff_Info_1, method= "Wald")
```

### Study 2

```{r}
m_pol_Aff_Info_2<- lmer( scale(eval) ~ scale(inMinOut) * scale(affPol) +scale(inMinOut) * scale(inMinOut) *  Info + ( scale(inMinOut) + scale(affPol) | subID) + (1 | issues), data = longDf2, control=lmerControl(optimizer="bobyqa",
                                optCtrl=list(maxfun=2e5)))
summary(m_pol_Aff_Info_2)
m_pol_Aff_Info_2_CI  <- confint(m_pol_Aff_Info_2, method= "Wald")
```

## Effect of Affective polarization & info *in the same model & reputation

### Study 1

```{r}
m <- lmer( scale(eval) ~ scale(inMinOut) * Info * scale(affPol)  + ( scale(inMinOut) | subID) + (1 | issues), data = longDf1, control=lmerControl(optimizer="bobyqa",
                                optCtrl=list(maxfun=2e5)))
summary(m)
m_pol_Aff_Info_2_CI  <- confint(m_pol_Aff_Info_2, method= "Wald")

ggpredict(m, c("inMinOut", "affPol", "Info")) %>% plot()
```

### Study 2

```{r}
m <- lmer( scale(eval) ~ scale(inMinOut) * Info * scale(affPol) + ( scale(inMinOut) | subID) + (1 | issues), data = longDf2, control=lmerControl(optimizer="bobyqa",
                                optCtrl=list(maxfun=2e5)))
summary(m)
ggpredict(m, c("inMinOut", "affPol", "Info")) %>% plot()
```


## Failed pre-registered effects for main effect of RepN on ideology

### Study 1

```{r}
demDf2 <- subset(longDf2, partyN=="Dem")
m1 <- lmer(eval ~ RepN*bootInOut + ( bootInOut | subID) + ( RepN | issues), data = demDf2, control=lmerControl(optimizer="bobyqa",
                                optCtrl=list(maxfun=2e5)))
summary(m1)
ggpredict(m1, c("bootInOut", "RepN") ) %>% plot()

repDf2 <- subset(longDf2, partyN=="Rep")
m2 <- lmer(eval ~ RepN * bootInOut + ( bootInOut | subID) + ( RepN | issues), data = repDf2, control=lmerControl(optimizer="bobyqa",
                                optCtrl=list(maxfun=2e5)))
summary(m2)
ggpredict(m2, c("bootInOut", "RepN") ) %>% plot()

m3 <- lmer(eval ~ RepN * bootInOut + ( bootInOut | subID) + ( RepN | issues), data = longDf2, control=lmerControl(optimizer="bobyqa",
                                optCtrl=list(maxfun=2e5)))
summary(m3)
ggpredict(m3, c("bootInOut", "RepN") ) %>% plot()
```

### Study 2

```{r}
demDf2 <- subset(longDf2, partyN=="Dem")
m1 <- lmer(eval ~ RepN*bootEvalIn + ( bootEvalIn | subID) + ( 1 | issues), data = demDf2, control=lmerControl(optimizer="bobyqa",
                                optCtrl=list(maxfun=2e5)))
summary(m1)
ggpredict(m1, c("bootEvalIn", "RepN") ) %>% plot()

repDf2 <- subset(longDf2, partyN=="Rep")
m2 <- lmer(eval ~ RepN * bootEvalIn + ( bootEvalIn | subID) + ( 1 | issues), data = repDf2, control=lmerControl(optimizer="bobyqa",
                                optCtrl=list(maxfun=2e5)))
summary(m2)
ggpredict(m2, c("bootEvalIn", "RepN") ) %>% plot()

m3 <- lmer(eval ~ RepN * bootEvalIn + ( bootEvalIn | subID) + ( 1 | issues), data = longDf2, control=lmerControl(optimizer="bobyqa",
                                optCtrl=list(maxfun=2e5)))
summary(m3)
ggpredict(m3, c("bootEvalIn", "RepN") ) %>% plot()
```

## Interaction between Info and RepN according to pre-registration

### Study 1

```{r}
demDf1 <- subset(longDf1, partyN=="Dem")
m1 <- lmer(eval ~ RepN*bootInOut*Info + bootInOutSD + ( bootInOut | subID) + ( 1 | issues), data = demDf1, control=lmerControl(optimizer="bobyqa",
                                optCtrl=list(maxfun=2e5)))
summary(m1)
ggpredict(m1, c("bootInOut", "RepN","Info") ) %>% plot()

repDf1 <- subset(longDf1, partyN=="Rep")
m2 <- lmer(eval ~ RepN * bootInOut * Info + ( bootInOut | subID) + ( 1 | issues), data = repDf1, control=lmerControl(optimizer="bobyqa",
                                optCtrl=list(maxfun=2e5)))
summary(m2)
ggpredict(m2, c("bootInOut", "RepN", "Info") ) %>% plot()

m3 <- lmer(eval ~ RepN * bootInOut * Info + ( bootInOut | subID) + ( 1 | issues), data = longDf1, control=lmerControl(optimizer="bobyqa",
                                optCtrl=list(maxfun=2e5)))
summary(m3)
ggpredict(m3, c("bootInOut", "RepN", "Info") ) %>% plot()
```

### Study 2

```{r}
demDf2 <- subset(longDf2, partyN=="Dem")
m1 <- lmer(eval ~ RepN*bootInOut*Info + ( bootInOut | subID) + ( 1 | issues), data = demDf2, control=lmerControl(optimizer="bobyqa",
                                optCtrl=list(maxfun=2e5)))
summary(m1)
ggpredict(m1, c("bootInOut", "RepN","Info") ) %>% plot()

repDf2 <- subset(longDf2, partyN=="Rep")
m2 <- lmer(eval ~ RepN * bootInOut * Info + ( bootInOut | subID) + ( 1 | issues), data = repDf2, control=lmerControl(optimizer="bobyqa",
                                optCtrl=list(maxfun=2e5)))
summary(m2)
ggpredict(m2, c("bootInOut", "RepN", "Info") ) %>% plot()

m3 <- lmer(eval ~ RepN * bootInOut * Info + ( bootInOut | subID) + ( 1 | issues), data = longDf2, control=lmerControl(optimizer="bobyqa",
                                optCtrl=list(maxfun=2e5)))
summary(m3)
ggpredict(m3, c("bootInOut", "RepN", "Info") ) %>% plot()
```

